filename; res; time
lake-edhoc.spthy ;--lemma=authIR_unique; RESULT event(AcceptI(cid_2,m,pkI_8,pkR_8,k3,k4,ko,x,gy))@i && event(AcceptI(cid_2,m,pkI_8,pkR_8,k3,k4,ko,x2,gy2))@j ==> i = j is true. ; 51;
lake-edhoc.spthy ;--lemma=authIR_unique -D=NeutralCheck -D=WeakAEAD -D=LeakSessionKey; RESULT event(AcceptI(cid_2,m,pkI_8,pkR_8,k3,k4,ko,x,gy))@i && event(AcceptI(cid_2,m,pkI_8,pkR_8,k3,k4,ko,x2,gy2))@j ==> i = j is true. ; 52;
lake-edhoc.spthy  ;--lemma=authRI_unique -D=NeutralCheck -D=WeakAEAD -D=LeakSessionKey; RESULT event(AcceptR(cid_2,m,pkI_8,pkR_8,k4,ko,y1,gx1))@i && event(AcceptR(cid_2,m,pkI_8,pkR_8,k4,ko,y2,gx2))@j ==> i = j is true. ; 54;
lake-edhoc.spthy  ;--lemma=authRI_unique; RESULT event(AcceptR(cid_2,m,pkI_8,pkR_8,k4,ko,y1,gx1))@i && event(AcceptR(cid_2,m,pkI_8,pkR_8,k4,ko,y2,gx2))@j ==> i = j is true. ; 54;
lake-edhoc.spthy  ;--lemma=no_reflection_attacks_RI; RESULT event(AcceptR(cid_2,m,pkI_8,pkR_8,k4,ko,y,gx))@i && event(Honest(pkI_8))@k ==> (i > t && event(AcceptI(cid2,m,pkI_8,pkR_8,k3,k4,ko2,x,gy))@t && cid_2 ≠ cid2) || event(Compromise(pkI_8))@t || (event(LeakShare(y))@t && (m = method_two || m = method_three)) || event(LeakShare(gx))@t is false. ; 55;
lake-edhoc.spthy -D=NonRepudiationSoundness ;--lemma=none -D=NeutralCheck; RESULT inj-event(WasActiveR(pkr,th2,proofnr))@i && event(Honest(pkr))@j ==> inj-event(THRShared(pkr,th2))@l || event(Compromise(pkr))@l is true. RESULT inj-event(WasActiveI(pkI_9,th3,proofnr))@i && event(Honest(pkI_9))@j ==> inj-event(THIShared(pkI_9,th3))@l || event(Compromise(pkI_9))@l is true. ; 76;
lake-edhoc.spthy	  ;--lemma=data_authentication_R_to_I	  -D=WeakAEAD; RESULT event(AcceptRData(PRK_out_8,method_2,pkI_8,pkR_8,y,gx,(TH_2,(TH_3,(TH_4,(suitesI_2,(EAD_1,(EAD_2,(EAD_3,(m1_2,(m2_5,m3)))))))))))@i && event(Honest(pkI_8))@j ==> (i > l && event(AcceptIData(PRK_out_8,method_2,pkI_8,pkR_8,x,gy,(TH_2,(TH_3,(TH_4,(suitesI_2,(EAD_1,(EAD_2,(EAD_3,(m11,(m22,m33)))))))))))@l) || (i > l && event(Compromise(pkI_8))@l) || (event(LeakShare(y))@l && (method_2 = method_two || method_2 = method_three)) is true. ; 60;
lake-edhoc-Sig-DDH.spthy	  ;--lemma=data_authentication_I_to_R   -D=WeakAEAD; RESULT event(AcceptIData(PRK_out_8,method_2,pkI_8,pkR_8,x,gy,(TH_2,(TH_3,(TH_4,(suitesI_2,(EAD_1,(EAD_2,(EAD_3,(m1_2,(m2_5,m3)))))))))))@i && event(Honest(pkR_8))@j ==> (i > l && event(SendRData(method_2,pkR_8,(TH_2,(suitesI_2,(EAD_1,(EAD_2,(m11,m22)))))))@l) || (i > l && event(Compromise(pkR_8))@l) || (event(LeakShare(x))@l && (method_2 = method_two || method_2 = method_three)) is true. ; 64;
lake-edhoc.spthy -D=NonRepudiationSoundness ;--lemma=none -D=NeutralCheck -D=WeakAEAD; RESULT inj-event(WasActiveR(pkr,th2,proofnr))@i && event(Honest(pkr))@j ==> inj-event(THRShared(pkr,th2))@l || event(Compromise(pkr))@l is true. RESULT inj-event(WasActiveI(pkI_9,th3,proofnr))@i && event(Honest(pkI_9))@j ==> inj-event(THIShared(pkI_9,th3))@l || event(Compromise(pkI_9))@l is true. ; 83;
lake-edhoc.spthy ;--lemma=authIR_unique -D=NeutralCheck -D=WeakestSignature -D=LeakSessionKey; RESULT event(AcceptI(cid_2,m,pkI_8,pkR_8,k3,k4,ko,x,gy))@i && event(AcceptI(cid_2,m,pkI_8,pkR_8,k3,k4,ko,x2,gy2))@j ==> i = j is true. ; 67;
lake-edhoc.spthy  ;--lemma=authRI_unique -D=NeutralCheck -D=WeakestSignature -D=LeakSessionKey; RESULT event(AcceptR(cid_2,m,pkI_8,pkR_8,k4,ko,y1,gx1))@i && event(AcceptR(cid_2,m,pkI_8,pkR_8,k4,ko,y2,gx2))@j ==> i = j is true. ; 68;
lake-edhoc.spthy	  ;--lemma=data_authentication_I_to_R	  -D=XorPrecise; RESULT event(AcceptIData(PRK_out_8,method_2,pkI_8,pkR_8,x,gy,(TH_2,(TH_3,(TH_4,(suitesI_2,(EAD_1,(EAD_2,(EAD_3,(m1_2,(m2_5,m3)))))))))))@i && event(Honest(pkR_8))@j ==> (i > l && event(SendRData(method_2,pkR_8,(TH_2,(suitesI_2,(EAD_1,(EAD_2,(m11,m22)))))))@l) || (i > l && event(Compromise(pkR_8))@l) || (event(LeakShare(x))@l && (method_2 = method_two || method_2 = method_three)) is true. ; 75;
lake-edhoc.spthy -D=NonRepudiationSoundness ;--lemma=none; RESULT inj-event(WasActiveR(pkr,th2,proofnr))@i && event(Honest(pkr))@j ==> inj-event(THRShared(pkr,th2))@l || event(Compromise(pkr))@l is true. RESULT inj-event(WasActiveI(pkI_9,th3,proofnr))@i && event(Honest(pkI_9))@j ==> inj-event(THIShared(pkI_9,th3))@l || event(Compromise(pkI_9))@l is true. ; 96;
lake-edhoc.spthy -D=NonRepudiationSoundness ;--lemma=none -D=NeutralCheck -D=WeakestSignature; RESULT inj-event(WasActiveR(pkr,th2,proofnr))@i && event(Honest(pkr))@j ==> inj-event(THRShared(pkr,th2))@l || event(Compromise(pkr))@l is false. RESULT (query encoded as inj-event(WasActiveR(pkr,th2,proofnr)) && event(Honest(pkr)) ==> inj-event(THRShared(pkr,th2)) || event(Compromise(pkr))) RESULT (but event(WasActiveR(pkr,th2,proofnr)) && event(Honest(pkr)) ==> event(THRShared(pkr,th2)) || event(Compromise(pkr)) is true.) RESULT inj-event(WasActiveI(pkI_9,th3,proofnr))@i && event(Honest(pkI_9))@j ==> inj-event(THIShared(pkI_9,th3))@l || event(Compromise(pkI_9))@l is false. RESULT (query encoded as inj-event(WasActiveI(pkI_9,th3,proofnr)) && event(Honest(pkI_9)) ==> inj-event(THIShared(pkI_9,th3)) || event(Compromise(pkI_9))) RESULT (but event(WasActiveI(pkI_9,th3,proofnr)) && event(Honest(pkI_9)) ==> event(THIShared(pkI_9,th3)) || event(Compromise(pkI_9)) is true.) ; 102;
lake-edhoc-Sig-DDH.spthy	  ;--lemma=data_authentication_I_to_R	 -D=LeakSessionKey; RESULT event(AcceptIData(PRK_out_8,method_2,pkI_8,pkR_8,x,gy,(TH_2,(TH_3,(TH_4,(suitesI_2,(EAD_1,(EAD_2,(EAD_3,(m1_2,(m2_5,m3)))))))))))@i && event(Honest(pkR_8))@j ==> (i > l && event(SendRData(method_2,pkR_8,(TH_2,(suitesI_2,(EAD_1,(EAD_2,(m11,m22)))))))@l) || (i > l && event(Compromise(pkR_8))@l) || (event(LeakShare(x))@l && (method_2 = method_two || method_2 = method_three)) is true. ; 89;
lake-edhoc.spthy  ;--lemma=data_authentication_R_to_I	 -D=LeakSessionKey -D=WeakestSignature; RESULT event(AcceptRData(PRK_out_8,method_2,pkI_8,pkR_8,y,gx,(TH_2,(TH_3,(TH_4,(suitesI_2,(EAD_1,(EAD_2,(EAD_3,(m1_3,(m2_6,m3)))))))))))@i && event(Honest(pkI_8))@j ==> (i > l && event(AcceptIData(PRK_out_8,method_2,pkI_8,pkR_8,x,gy,(TH_2,(TH_3,(TH_4,(suitesI_2,(EAD_1,(EAD_2,(EAD_3,(m11,(m22,m33)))))))))))@l) || (i > l && event(Compromise(pkI_8))@l) || (event(LeakShare(y))@l && (method_2 = method_two || method_2 = method_three)) is true. ; 90;
lake-edhoc-Sig-DDH.spthy	  ;--lemma=honestauthRI_non_inj -D=WeakAEAD; RESULT event(AcceptR(cid_2,m,pkI_8,pkR_8,k4,ko,y,gx))@i && event(Honest(pkI_8))@k ==> (i > t && event(AcceptI(cid2,m,pkI_8,pkR_8,k3,k4,ko2,x,gy))@t) || event(Compromise(pkI_8))@t || (event(LeakShare(y))@t && (m = method_two || m = method_three)) is true. ; 90;
lake-edhoc-Sig-DDH.spthy	  ;--lemma=no_reflection_attacks_RI	  -D=CredCheck; RESULT event(AcceptR(cid_2,m,pkI_8,pkR_8,k4,ko,y,gx))@i && event(Honest(pkI_8))@k ==> (i > t && event(AcceptI(cid2,m,pkI_8,pkR_8,k3,k4,ko2,x,gy))@t && cid_2 ≠ cid2) || event(Compromise(pkI_8))@t || (event(LeakShare(y))@t && (m = method_two || m = method_three)) || event(LeakShare(gx))@t is true. ; 93;
lake-edhoc-Sig-DDH.spthy	  ;--lemma=no_reflection_attacks_RI	-D=WeakAEAD  -D=CredCheck; RESULT event(AcceptR(cid_2,m,pkI_8,pkR_8,k4,ko,y,gx))@i && event(Honest(pkI_8))@k ==> (i > t && event(AcceptI(cid2,m,pkI_8,pkR_8,k3,k4,ko2,x,gy))@t && cid_2 ≠ cid2) || event(Compromise(pkI_8))@t || (event(LeakShare(y))@t && (m = method_two || m = method_three)) || event(LeakShare(gx))@t is true. ; 100;
lake-edhoc.spthy ;--lemma=authIR_unique -D=NeutralCheck -D=XorPrecise -D=LeakSessionKey; RESULT event(AcceptI(cid_2,m,pkI_8,pkR_8,k3,k4,ko,x,gy))@i && event(AcceptI(cid_2,m,pkI_8,pkR_8,k3,k4,ko,x2,gy2))@j ==> i = j is true. ; 107;
lake-edhoc-Sig-DDH.spthy	  ;--lemma=honestauthRI_non_inj  -D=LeakSessionKey; RESULT event(AcceptR(cid_2,m,pkI_8,pkR_8,k4,ko,y,gx))@i && event(Honest(pkI_8))@k ==> (i > t && event(AcceptI(cid2,m,pkI_8,pkR_8,k3,k4,ko2,x,gy))@t) || event(Compromise(pkI_8))@t || (event(LeakShare(y))@t && (m = method_two || m = method_three)) is true. ; 108;
lake-edhoc.spthy  ;--lemma=authRI_unique -D=NeutralCheck -D=XorPrecise -D=LeakSessionKey; RESULT event(AcceptR(cid_2,m,pkI_8,pkR_8,k4,ko,y1,gx1))@i && event(AcceptR(cid_2,m,pkI_8,pkR_8,k4,ko,y2,gx2))@j ==> i = j is true. ; 119;
lake-edhoc.spthy  ;--lemma=data_authentication_I_to_R	 -D=LeakShare -D=WeakestSignature; RESULT event(AcceptIData(PRK_out_8,method_2,pkI_8,pkR_8,x,gy,(TH_2,(TH_3,(TH_4,(suitesI_2,(EAD_1,(EAD_2,(EAD_3,(m1_3,(m2_6,m3)))))))))))@i && event(Honest(pkR_8))@j ==> (i > l && event(SendRData(method_2,pkR_8,(TH_2,(suitesI_2,(EAD_1,(EAD_2,(m11,m22)))))))@l) || (i > l && event(Compromise(pkR_8))@l) || (event(LeakShare(x))@l && (method_2 = method_two || method_2 = method_three)) is false. ; 125;
lake-edhoc.spthy	  ;--lemma=no_reflection_attacks_RI	-D=XorPrecise  -D=CredCheck; RESULT event(AcceptR(cid_2,m,pkI_8,pkR_8,k4,ko,y,gx))@i && event(Honest(pkI_8))@k ==> (i > t && event(AcceptI(cid2,m,pkI_8,pkR_8,k3,k4,ko2,x,gy))@t && cid_2 ≠ cid2) || event(Compromise(pkI_8))@t || (event(LeakShare(y))@t && (m = method_two || m = method_three)) || event(LeakShare(gx))@t is true. ; 129;
lake-edhoc.spthy	  ;--lemma=honestauthRI_non_inj -D=XorPrecise; RESULT event(AcceptR(cid_2,m,pkI_8,pkR_8,k4,ko,y,gx))@i && event(Honest(pkI_8))@k ==> (i > t && event(AcceptI(cid2,m,pkI_8,pkR_8,k3,k4,ko2,x,gy))@t) || event(Compromise(pkI_8))@t || (event(LeakShare(y))@t && (m = method_two || m = method_three)) is true. ; 139;
lake-edhoc-Sig-DDH.spthy	  ;--lemma=secretI	  -D=WeakAEAD; RESULT event(AcceptI(cid_2,m,pkI_8,pkR_8,k3,k4,ko,x,gy))@i && attacker(ko)@j && event(Honest(pkR_8))@k ==> (event(Compromise(pkR_8))@t && i > t) || event(LeakSessionKey(ko))@t || event(LeakShare(gy))@t || event(LeakShare(x))@t is true. ; 143;
lake-edhoc-Sig-DDH.spthy	  ;--lemma=secretR	  -D=WeakAEAD; RESULT event(AcceptR(cid_2,m,pkI_8,pkR_8,k4,ko,y,gx))@i && attacker(ko)@j && event(Honest(pkI_8))@k ==> (event(Compromise(pkI_8))@t && i > t) || event(LeakSessionKey(ko))@t || event(LeakShare(y))@t || event(LeakShare(gx))@t is true. ; 168;
lake-edhoc.spthy	  ;--lemma=data_authentication_R_to_I	  -D=XorPrecise; RESULT event(AcceptRData(PRK_out_8,method_2,pkI_8,pkR_8,y,gx,(TH_2,(TH_3,(TH_4,(suitesI_2,(EAD_1,(EAD_2,(EAD_3,(m1_2,(m2_5,m3)))))))))))@i && event(Honest(pkI_8))@j ==> (i > l && event(AcceptIData(PRK_out_8,method_2,pkI_8,pkR_8,x,gy,(TH_2,(TH_3,(TH_4,(suitesI_2,(EAD_1,(EAD_2,(EAD_3,(m11,(m22,m33)))))))))))@l) || (i > l && event(Compromise(pkI_8))@l) || (event(LeakShare(y))@l && (method_2 = method_two || method_2 = method_three)) is true. ; 187;
lake-edhoc-Sig-DDH.spthy	  ;--lemma=secretI	  -D=LeakSessionKey; RESULT event(AcceptI(cid_2,m,pkI_8,pkR_8,k3,k4,ko,x,gy))@i && attacker(ko)@j && event(Honest(pkR_8))@k ==> (event(Compromise(pkR_8))@t && i > t) || event(LeakSessionKey(ko))@t || event(LeakShare(gy))@t || event(LeakShare(x))@t is true. ; 190;
lake-edhoc-Sig-DDH.spthy	  ;--lemma=secretR	  -D=LeakSessionKey; RESULT event(AcceptR(cid_2,m,pkI_8,pkR_8,k4,ko,y,gx))@i && attacker(ko)@j && event(Honest(pkI_8))@k ==> (event(Compromise(pkI_8))@t && i > t) || event(LeakSessionKey(ko))@t || event(LeakShare(y))@t || event(LeakShare(gx))@t is true. ; 228;
lake-edhoc.spthy	  ;--lemma=secretR	  -D=XorPrecise; RESULT event(AcceptR(cid_2,m,pkI_8,pkR_8,k4,ko,y,gx))@i && attacker(ko)@j && event(Honest(pkI_8))@k ==> (event(Compromise(pkI_8))@t && i > t) || event(LeakSessionKey(ko))@t || event(LeakShare(y))@t || event(LeakShare(gx))@t is true. ; 242;
lake-edhoc.spthy	  ;--lemma=secretI	  -D=XorPrecise; RESULT event(AcceptI(cid_2,m,pkI_8,pkR_8,k3,k4,ko,x,gy))@i && attacker(ko)@j && event(Honest(pkR_8))@k ==> (event(Compromise(pkR_8))@t && i > t) || event(LeakSessionKey(ko))@t || event(LeakShare(gy))@t || event(LeakShare(x))@t is true. ; 278;
lake-edhoc.spthy	  ;--lemma=honestauthRI_non_inj	  -D=LeakShare -D=WeakestSignature -D=LeakSessionKey; RESULT event(AcceptR(cid_2,m,pkI_8,pkR_8,k4,ko,y,gx))@i && event(Honest(pkI_8))@k ==> (i > t && event(AcceptI(cid2,m,pkI_8,pkR_8,k3,k4,ko2,x,gy))@t) || event(Compromise(pkI_8))@t || (event(LeakShare(y))@t && (m = method_two || m = method_three)) is true. ; 780;
lake-edhoc.spthy	  ;--lemma=data_authentication_R_to_I	  -D=LeakShare -D=WeakestSignature ; RESULT event(AcceptRData(PRK_out_8,method_2,pkI_8,pkR_8,y,gx,(TH_2,(TH_3,(TH_4,(suitesI_2,(EAD_1,(EAD_2,(EAD_3,(m1_3,(m2_6,m3)))))))))))@i && event(Honest(pkI_8))@j ==> (i > l && event(AcceptIData(PRK_out_8,method_2,pkI_8,pkR_8,x,gy,(TH_2,(TH_3,(TH_4,(suitesI_2,(EAD_1,(EAD_2,(EAD_3,(m11,(m22,m33)))))))))))@l) || (i > l && event(Compromise(pkI_8))@l) || (event(LeakShare(y))@l && (method_2 = method_two || method_2 = method_three)) is false. ; 892;
lake-edhoc.spthy	  ;--lemma=secretI	  -D=LeakShare -D=WeakestSignature -D=LeakSessionKey; ; 1833;
lake-edhoc.spthy	  ;--lemma=secretR	  -D=LeakShare -D=WeakestSignature -D=LeakSessionKey; ; 1836;
lake-edhoc.spthy -D=NonRepudiationSoundness ;--lemma=none -D=NeutralCheck; RESULT inj-event(WasActiveR(pkr,th2,proofnr))@i && event(Honest(pkr))@j ==> inj-event(THRShared(pkr,th2))@l || event(Compromise(pkr))@l is true. RESULT inj-event(WasActiveI(pkI_9,th3,proofnr))@i && event(Honest(pkI_9))@j ==> inj-event(THIShared(pkI_9,th3))@l || event(Compromise(pkI_9))@l is true. ; 25;
lake-edhoc.spthy -D=NonRepudiationSoundness ;--lemma=none -D=NeutralCheck -D=WeakAEAD; RESULT inj-event(WasActiveR(pkr,th2,proofnr))@i && event(Honest(pkr))@j ==> inj-event(THRShared(pkr,th2))@l || event(Compromise(pkr))@l is true. RESULT inj-event(WasActiveI(pkI_9,th3,proofnr))@i && event(Honest(pkI_9))@j ==> inj-event(THIShared(pkI_9,th3))@l || event(Compromise(pkI_9))@l is true. ; 28;
lake-edhoc.spthy -D=NonRepudiationSoundness ;--lemma=none; RESULT inj-event(WasActiveR(pkr,th2,proofnr))@i && event(Honest(pkr))@j ==> inj-event(THRShared(pkr,th2))@l || event(Compromise(pkr))@l is true. RESULT inj-event(WasActiveI(pkI_9,th3,proofnr))@i && event(Honest(pkI_9))@j ==> inj-event(THIShared(pkI_9,th3))@l || event(Compromise(pkI_9))@l is true. ; 34;
lake-edhoc.spthy -D=NonRepudiationSoundness ;--lemma=none -D=NeutralCheck -D=WeakestSignature; RESULT inj-event(WasActiveR(pkr,th2,proofnr))@i && event(Honest(pkr))@j ==> inj-event(THRShared(pkr,th2))@l || event(Compromise(pkr))@l is false. RESULT (query encoded as inj-event(WasActiveR(pkr,th2,proofnr)) && event(Honest(pkr)) ==> inj-event(THRShared(pkr,th2)) || event(Compromise(pkr))) RESULT (but event(WasActiveR(pkr,th2,proofnr)) && event(Honest(pkr)) ==> event(THRShared(pkr,th2)) || event(Compromise(pkr)) is true.) RESULT inj-event(WasActiveI(pkI_9,th3,proofnr))@i && event(Honest(pkI_9))@j ==> inj-event(THIShared(pkI_9,th3))@l || event(Compromise(pkI_9))@l is false. RESULT (query encoded as inj-event(WasActiveI(pkI_9,th3,proofnr)) && event(Honest(pkI_9)) ==> inj-event(THIShared(pkI_9,th3)) || event(Compromise(pkI_9))) RESULT (but event(WasActiveI(pkI_9,th3,proofnr)) && event(Honest(pkI_9)) ==> event(THIShared(pkI_9,th3)) || event(Compromise(pkI_9)) is true.) ; 36;
lake-edhoc-Sig-DDH.spthy	  ;--lemma=secretR	  -D=WeakAEAD; RESULT event(AcceptR(cid_2,m,pkI_8,pkR_8,k4,ko,y,gx))@i && attacker(ko)@j && event(Honest(pkI_8))@k ==> (event(Compromise(pkI_8))@t && i > t) || event(LeakSessionKey(ko))@t || event(LeakShare(y))@t || event(LeakShare(gx))@t is true. ; 90;
lake-edhoc-Sig-DDH.spthy	  ;--lemma=secretR	  -D=LeakSessionKey; RESULT event(AcceptR(cid_2,m,pkI_8,pkR_8,k4,ko,y,gx))@i && attacker(ko)@j && event(Honest(pkI_8))@k ==> (event(Compromise(pkI_8))@t && i > t) || event(LeakSessionKey(ko))@t || event(LeakShare(y))@t || event(LeakShare(gx))@t is true. ; 122;
